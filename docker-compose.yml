version: '3.3.1'
services:
  #  job-app:
  #    container_name: job-app
  #    image: louielaureles023/job-app
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  ##    restart: always
  #    restart: unless-stopped
  #    ports:
  #      - 8080:8080
  ##    depends_on:
  ##      mysql:
  ##        condition: service_healthy
  #    depends_on:
  #      postgres:
  #        condition: service_healthy
  ##    environment:
  ###      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/job_app
  ##      SPRING_DATASOURCE_USERNAME: root
  ##      SPRING_DATASOURCE_PASSWORD: root
  #    networks:
  #      - job-app-network

  #  mysql:
  #    container_name: mysql-db
  #    image: mysql:8.3.0
  #    environment:
  #       MYSQL_ROOT_PASSWORD: root
  #       MYSQL_DATABASE: job_app
  ##    restart: always
  #    ports:
  #      - 3307:3306
  #    volumes:
  #      - my-db:/var/lib/mysql
  #    networks:
  #      - job-app-network
  #    healthcheck:
  #      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  #      retries: 10
  #      interval: 3s
  #      timeout: 30s

  companyms:
    container_name: company-ms
    image: louielaureles023/jobapp_companyms:latest
    ports:
      - 2021:2021
    depends_on:
      - service-reg
      - config-server-ms
    networks:
      - job-app-network
      - postgres-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  jobms:
    container_name: job-ms
    image: louielaureles023/jobapp_jobms:latest
    ports:
      - 2022:2022
    depends_on:
      - service-reg
      - config-server-ms
    networks:
      - job-app-network
      - postgres-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-reg:8761/eureka

  reviewms:
    container_name: review-ms
    image: louielaureles023/jobapp_reviewms:latest
    ports:
      - 2023:2023
    depends_on:
      - service-reg
      - config-server-ms
    networks:
      - job-app-network
      - postgres-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  service-reg:
    container_name: service-reg
    image: louielaureles023/jobapp_service-reg:latest
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - job-app-network
      - postgres-network

  config-server-ms:
    container_name: config-server-ms
    image: louielaureles023/jobapp_config-server-ms:latest
    ports:
      - 2020:2020
    depends_on:
      - service-reg
    networks:
      - job-app-network
      - postgres-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway-ms:
    container_name: gateway-ms
    image: louielaureles023/jobapp_gateway-ms:latest
    ports:
      - 2024:2024
    depends_on:
      - service-reg
    networks:
      - job-app-network
      - postgres-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  postgres:
    container_name: postgres-db
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: job_app
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - my-db:/var/lib/postgresql/data
    networks:
      - postgres-network
  #    healthcheck:
  #      test: pg_isready
  #      retries: 10
  #      interval: 3s
  #      timeout: 30s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
    restart: unless-stopped
    ports:
      - 5050:80
    volumes:
      - my-pgadmin:/var/lib/pgadmin
    networks:
      - postgres-network

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - job-app-network
      - postgres-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - job-app-network
      - postgres-network

volumes:
  my-db:
  my-pgadmin:

networks:
  job-app-network:
    name: job-app-network
    driver: bridge
  postgres-network:
    name: postgres-network
    driver: bridge
